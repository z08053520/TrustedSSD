#!/usr/bin/python

# Input file :
         # str2w = '%d %d %d %d'%(item[0], tmp_sum, sum_of_entries, dict_lth) kb.xxx.txt
         # This file will generated by statistical_block_file_io.py

import numpy as np
import scipy as sp
import matplotlib.pyplot as plt
import matplotlib
import sys

def draw_pics_of_prob() :

  if len(sys.argv) < 2 :
    print '\t\n Usage : You should input the source file to plot the pics !\n'
    return

  flip = open(sys.argv[1], 'r')
  if not flip :
    print 'Can not open file %s to read !\n'%sys.argv[1]
    return

  list_axis_x = []
  list_axis_y = []
  order_sq    = 0
  final_KB    = 0
  line = flip.readline()
  while line :
    words    = line.split()
    final_KB = int (words[0])
    entries  = int (words[1])
    sz_total = int (words[2])
    dict_lth = int (words[3])
    order_sq = order_sq + 1
    #axis_x   = float(order_sq) / float(dict_lth)
    axis_x   = final_KB / 2 
    axis_y   = float(entries) / float(sz_total)
    list_axis_x.append(axis_x)
    list_axis_y.append(axis_y)
    line = flip.readline()

  plt_fig  = plt.figure()
  ax       = plt_fig.add_subplot(1, 1, 1)
  ax.set_xscale('log', basex = 2)
  ax.xaxis.set_major_formatter(matplotlib.ticker.ScalarFormatter())
  ax.xaxis.set_major_formatter(matplotlib.ticker.FormatStrFormatter('%d'))
  ax.xaxis.set_major_formatter(matplotlib.ticker.FuncFormatter(lambda x, pos : str(int(round(x)))))

  plt.plot(list_axis_x, list_axis_y)
  plt.axis([0, final_KB/2, 0, 1])
  plt.grid(True)
  plt.xlabel(u'size(KB)')
  plt.ylabel(u'Probablity')
  plt.show()

if __name__ == '__main__' :
  draw_pics_of_prob()
